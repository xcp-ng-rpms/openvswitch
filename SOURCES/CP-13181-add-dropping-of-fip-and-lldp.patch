diff --git a/datapath/vport-netdev.c b/datapath/vport-netdev.c
index 4eb881671da8..cd6ba86d7061 100644
--- a/datapath/vport-netdev.c
+++ b/datapath/vport-netdev.c
@@ -44,6 +44,16 @@ void netdev_port_receive(struct sk_buff *skb, struct ip_tunnel_info *tun_info)
 {
 	struct vport *vport;
 
+	/* This is hack to make ovs not process
+	 * FIP and LLDP packets, which is required for
+	 * FCoE.
+	 * ETH_P_LLDP (0x88cc) is not defined in kernel
+	 */
+	if ((ignore_fip_lldp) &&
+		(skb->protocol == cpu_to_be16(ETH_P_FIP) ||
+		skb->protocol == cpu_to_be16(0x88CC)))
+		return RX_HANDLER_PASS;
+
 	vport = ovs_netdev_get_vport(skb->dev);
 	if (unlikely(!vport))
 		goto error;
@@ -75,6 +85,15 @@ static rx_handler_result_t netdev_frame_hook(struct sk_buff **pskb)
 
 	if (unlikely(skb->pkt_type == PACKET_LOOPBACK))
 		return RX_HANDLER_PASS;
+	/* This is hack to make ovs not process
+	 * FIP and LLDP packets, which is required for
+	 * FCoE.
+	 * ETH_P_LLDP (0x88cc) is not defined in kernel
+	 */
+	if ((ignore_fip_lldp) &&
+			(skb->protocol == cpu_to_be16(ETH_P_FIP) ||
+			 skb->protocol == cpu_to_be16(0x88CC)))
+		return RX_HANDLER_PASS;
 
 #ifndef USE_UPSTREAM_TUNNEL
 	netdev_port_receive(skb, NULL);
